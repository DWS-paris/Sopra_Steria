{"version":3,"sources":["webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/header/module.ts","webpack:///./src/app/shared/user-form/module.ts","webpack:///./src/app/shared/user-form/user-form.component.html","webpack:///./src/app/shared/user-form/user-form.component.ts"],"names":[],"mappings":"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","file":"pages-home-page-module~pages-single-user-page-module.js","sourcesContent":["module.exports = \"<header>\\n  <h1>{{mainTitle}}</h1>\\n  <nav>\\n    <ul class=\\\"flexBoxes\\\">\\n      <li *ngFor=\\\"let item of navCollection\\\">\\n        <a \\n          [routerLink]=\\\"item.path\\\"\\n          [ngClass]=\\\"{ 'isActive': item.isActive }\\\"\\n        >\\n          {{item.name}}\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n</header>\"","/*\nImport et configuration\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from \"@angular/router\";\n\n  // Inner\n  import { NavModel } from \"../../shared/_models/nav.model\";\n\n\n  // Configuration\n  @Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styles: [`\n      .isActive{ background: var(--main-color); }\n    `]\n  })\n//\n\n/*\nExport\n*/\n  export class HeaderComponent implements OnInit {\n\n    /*\n    Variables\n    */\n      public mainTitle: string;\n      public navCollection: Array<NavModel>;\n    //\n\n\n    /*\n    Ajouter de la valeur aux variables\n    */\n      constructor(\n        // Rendre disponible le routeur dans le composant\n        private Router: Router\n        \n      ) {\n        this.mainTitle = `NewsFeed`;\n\n        this.navCollection = [\n          {\n            isActive: false,\n            name: 'Accueil',\n            path: '/'\n          },\n          {\n            isActive: false,\n            name: 'Actualités',\n            path: '/news'\n          },\n          {\n            isActive: false,\n            name: 'Utilisateurs',\n            path: '/users'\n          }\n        ]\n      };\n    //\n\n\n    /*\n    Méthodes\n    */\n      // Créer une fonction pour activer le lien (CSS)\n      private linkIsActive = ( path: string ) => {\n        for( let item of this.navCollection ){\n          item.path === path ? item.isActive = true : null;\n        }\n      };\n    //\n\n    ngOnInit() {\n      this.linkIsActive(this.Router.url)\n    }\n\n  }\n//","/*\nImport\n*/\n    // Angular\n    import { NgModule } from \"@angular/core\";\n    import { CommonModule } from \"@angular/common\";\n    import { RouterModule } from \"@angular/router\";\n\n    // Inner\n    import { HeaderComponent } from \"./header.component\";\n//\n\n\n/*\nDéfinition\n*/\n    @NgModule({\n        declarations: [ HeaderComponent ],\n        imports:[ CommonModule, RouterModule ],\n        exports: [ HeaderComponent ]\n    })\n//\n\n\n/*\nExport\n*/\n    export class HeaderModule{};\n//","/*\nImport\n*/\n    // Angular\n    import { NgModule } from \"@angular/core\";\n    import { CommonModule } from \"@angular/common\";\n    import { FormsModule } from \"@angular/forms\";\n\n    // Inner\n    import { UserFormComponent } from \"./user-form.component\";\n//\n\n\n/*\nDéfinition\n*/\n    @NgModule({\n        declarations: [ UserFormComponent ],\n        imports:[ CommonModule, FormsModule ],\n        exports: [ UserFormComponent ] //=> Pour utiliser le composant dans plusieurs pages\n    })\n//\n\n\n/*\nExport\n*/\n    export class UserFormModule{};\n//","module.exports = \"<form (submit)=\\\"registerUser()\\\"> \\n\\n  <label [innerHTML]=\\\"formData.userName.label\\\"></label>\\n  <input \\n    type=\\\"text\\\" \\n    name=\\\"userName\\\"\\n\\n    [(ngModel)]=\\\"formData.userName.value\\\"\\n    (focus)=\\\"deleteError(formData.userName, 'Nom complet')\\\"\\n  >\\n  \\n  <label [innerHTML]=\\\"formData.userEmail.label\\\"></label>\\n  <input type=\\\"email\\\" [(ngModel)]=\\\"formData.userEmail.value\\\" name=\\\"userEmail\\\" (focus)=\\\"deleteError(formData.userEmail, 'Votre email')\\\">\\n\\n  <label [innerHTML]=\\\"formData.userPassword.label\\\"></label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"formData.userPassword.value\\\" name=\\\"userPassword\\\" (focus)=\\\"deleteError(formData.userPassword, 'Votre mot de passe')\\\">\\n\\n  <div *ngIf=\\\"formType === 'create'\\\">\\n    <label [innerHTML]=\\\"formData.userRepeatPassword.label\\\"></label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"formData.userRepeatPassword.value\\\" name=\\\"userRepeatPassword\\\"  (focus)=\\\"deleteError(formData.userRepeatPassword, 'Répéter votre mot de passe')\\\">\\n\\n    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"formData.userTos.value\\\" name=\\\"userTos\\\" (focus)=\\\"deleteError(formData.userTos, 'Accépter les CDG')\\\">\\n    <label [innerHTML]=\\\"formData.userTos.label\\\"></label>\\n  </div>\\n\\n  <button type=\\\"submit\\\">Inscription</button> \\n\\n</form>\"","\n/*\nImports\n*/\n  // Angular\n  import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n  // Inner\n  import { RegisterModel } from \"../../shared/_models/register.model\";\n//\n\n\n/*\nDéfinition et export\n*/\n  @Component({\n    selector: 'app-user-form',\n    templateUrl: './user-form.component.html',\n    styles: []\n  })\n  export class UserFormComponent implements OnInit {\n\n    /*\n    Variables\n    */\n      // Importer des données depuis le composant parent\n      @Input() formData: RegisterModel;\n      @Input() formType: string;\n\n      // Créer un événement\n      @Output() sendData = new EventEmitter();\n\n      public formError: number;\n    //\n\n    constructor() { }\n\n    /*\n    Méthode\n    */\n      // Créer une fonction pour la soumission du formulaire\n      public registerUser = () => {\n         // Initialiser la variable formError\n         this.formError = 0;\n        \n         // Vérifier les données de l'objet formData\n         this.formData.userName.value.length < 2 ? this.addError(this.formData.userName) : null;\n         this.formData.userEmail.value.length < 6 ? this.addError(this.formData.userEmail) : null;\n         this.formData.userPassword.value.length < 5 ? this.addError(this.formData.userPassword) : null;\n\n         if( this.formType === 'create' ){\n          this.formData.userRepeatPassword.value !== this.formData.userPassword.value ? this.addError(this.formData.userRepeatPassword) : null;\n          this.formData.userTos.value === false ? this.addError(this.formData.userTos) : null;\n        }\n\n        //  Vérification finale :  émettre l'événement sendData\n        this.formError === 0 ? this.sendData.emit(this.formData) : null;\n      };\n      \n      // Créer une fonction pour ajouter une erreur au registerFormData\n      private addError = ( object ) => {\n        // Ajouter 1 à formError\n        this.formError++;\n\n        // Afficher un message d'erreur\n        object.label += `<span>Champ obligatoire</span>`\n      };\n\n\n      // Créer une fonction pour supprimer un message d'erreur\n      public deleteError = (object, text: string) => {\n        object.label = text\n      }\n    //\n\n    ngOnInit() {\n    }\n\n  }\n//"],"sourceRoot":""}