{"version":3,"sources":["webpack:///./src/app/pages/news-page/module.ts","webpack:///./src/app/pages/news-page/news-page.component.html","webpack:///./src/app/pages/news-page/news-page.component.ts","webpack:///./src/app/pages/news-page/route.ts","webpack:///./src/app/services/news/news.service.ts","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/header/module.ts"],"names":[],"mappings":"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","file":"pages-news-page-module.js","sourcesContent":["/*\nImport\n*/\n    // Angular\n    import { NgModule } from \"@angular/core\";\n    import { CommonModule } from \"@angular/common\";\n    import { FormsModule } from \"@angular/forms\";\n\n    // Inner\n    import { NewsPageComponent } from \"./news-page.component\";\n    import { ComponentRouter } from \"./route\";\n    import { HeaderModule } from \"../../shared/header/module\";\n//\n\n\n/*\nDéfinition\n*/\n    @NgModule({\n        declarations: [ NewsPageComponent ],\n        imports: [ CommonModule, FormsModule, ComponentRouter, HeaderModule ]\n    })\n//\n\n\n/*\nExport\n*/\n    export class Module{};\n//","module.exports = \"<app-header></app-header>\\n\\n<main>\\n  <section *ngIf=\\\"sourcesCollection\\\">\\n\\n    <select [(ngModel)]=\\\"defaultSource\\\" (change)=\\\"getArticles($event.target.value)\\\">\\n      <option *ngFor=\\\"let item of sourcesCollection\\\" [value]=\\\"item.id\\\" [textContent]=\\\"item.name\\\"></option>\\n    </select>\\n\\n  </section>\\n\\n  <section *ngIf=\\\"articlesCollection\\\">\\n    \\n    <article *ngFor=\\\"let item of articlesCollection\\\">\\n      <h2 [innerHTML]=\\\"item.title\\\"></h2>\\n      <img [src]=\\\"item.urlToImage || '/assets/img/jurassic-error.jpg'\\\" [alt]=\\\"item.title\\\">\\n      <p [innerHTML]=\\\"item.description\\\"></p>\\n      <a *ngIf=\\\"item.url\\\" [href]=\\\"item.url\\\" [innerText]=\\\"'Lire la suite...'\\\" target=\\\"_blank\\\"></a>\\n    </article>\\n\\n  </section>\\n</main>\"","/*\nImportes\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n\n  // Inner\n  import { NewsService } from \"../../services/news/news.service\";\n  import { NewsSourceModel } from \"../../shared/_models/news.source.model\";\n  import { ArticleModel } from \"../../shared/_models/article.model\";\n//\n\n\n/*\nConfiguration en export\n*/\n  @Component({\n    selector: 'app-news-page',\n    templateUrl: './news-page.component.html'\n  })\n  export class NewsPageComponent implements OnInit {\n\n    /*\n    Variables\n    */\n      public sourcesCollection: Array<NewsSourceModel>;\n      public articlesCollection: Array<ArticleModel>;\n      public defaultSource: string;\n      public blankArticle: ArticleModel;\n    //\n\n    constructor(\n      // Injecter le services dans la class du composant\n      private NewsService: NewsService\n    ) {\n      this.defaultSource = 'liberation';\n      this.blankArticle = {\n        title: 'Aucun article',\n        description: 'Sélectionner une autre source',\n        urlToImage: '/assets/img/jurassic-error.jpg'\n      }\n    }\n\n    /*\n    Méthodes\n    */\n      // Créer une fonction pour chager le liste des sources\n      private getSources = () => {\n        this.NewsService.getSources()\n        .then( apiResponse => {\n          console.log(apiResponse)\n          this.sourcesCollection = apiResponse.sources;\n        })\n        .catch( apiResponse => {\n          console.error(apiResponse)\n        })\n      };\n\n      // Créer une fonction pour charger la liste des articles\n      public getArticles = ( source: string = this.defaultSource ) => {\n        console.log(source)\n\n        this.NewsService.getArticles(source)\n        .then( apiResponse => {\n          // Vérifier la présence d'articles dans la réponse de l'api\n          apiResponse.totalResults > 0 \n          ? this.articlesCollection = apiResponse.articles \n          : this.articlesCollection = [ this.blankArticle ];\n        })\n        .catch( apiResponse => {\n          console.error(apiResponse)\n        })\n      };\n    //\n\n    /*\n    Hooks Angular\n    */\n      async ngOnInit() {\n        await this.getSources();\n        await this.getArticles();\n      };\n    //\n  };\n//","/*\nImport\n*/\n    // Angular\n    import { ModuleWithProviders } from \"@angular/core\";\n    import { Routes, RouterModule } from \"@angular/router\";\n\n    // Inner\n    import { NewsPageComponent } from \"./news-page.component\";\n//\n\n/*\nDéfinir les routes dans un tableau de Routes\n*/\n    const routes: Routes = [\n        {\n            path: '',\n            component: NewsPageComponent\n        }\n    ];\n//\n\n/*\nExporter les routes\n*/\n    export const ComponentRouter: ModuleWithProviders = RouterModule.forChild(routes);\n//","/*\nImport\n*/\n  // Angular\n  import { Injectable } from '@angular/core';\n  import { HttpClient, HttpHeaders } from \"@angular/common/http\"; // Pour les requêtes HTTP\n  import { environment } from \"../../../environments/environment\";\n\n// \n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n\n  /*\n  Variables\n  */\n    private apiUrl: string;\n  //\n\n  constructor(\n    // Injecter le module HttpClient dans la class du service\n    private HttpClient: HttpClient\n  ) { \n    // Ajouter de la valeur aux variables\n    this.apiUrl = `https://newsapi.org/v2`\n  }\n\n  /*\n  Méthodes\n  */\n    // Crèer une fonction pour récupérer la liste des sources\n    public getSources = (): Promise<any> => {\n      return this.HttpClient.get(`${this.apiUrl}/sources?apiKey=${environment.newsApiKey}`)\n      .toPromise().then(this.getData).catch(this.handleError);\n    }\n\n    // Crèer une fonction pour récupérer la liste des articles\n    public getArticles = (source: string, langue: string = 'fr'): Promise<any> => {\n      return this.HttpClient.get(`${this.apiUrl}/everything?sources=${source}&language=${langue}&apiKey=${environment.newsApiKey}`)\n      .toPromise().then(this.getData).catch(this.handleError);\n    }\n  //\n\n  /*\n  Traitement des retours API\n  */\n    private getData = (apiResponse) => {\n      return Promise.resolve( apiResponse || {} );\n    };\n\n    private handleError = (error) => {\n      return Promise.reject(error);\n    };\n  //\n}\n","module.exports = \"<header>\\n  <h1>{{mainTitle}}</h1>\\n  <nav>\\n    <ul class=\\\"flexBoxes\\\">\\n      <li *ngFor=\\\"let item of navCollection\\\">\\n        <a \\n          [routerLink]=\\\"item.path\\\"\\n          [ngClass]=\\\"{ 'isActive': item.isActive }\\\"\\n        >\\n          {{item.name}}\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n</header>\"","/*\nImport et configuration\n*/\n  // Angular\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from \"@angular/router\";\n\n  // Inner\n  import { NavModel } from \"../../shared/_models/nav.model\";\n\n\n  // Configuration\n  @Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styles: [`\n      .isActive{ background: var(--main-color); }\n    `]\n  })\n//\n\n/*\nExport\n*/\n  export class HeaderComponent implements OnInit {\n\n    /*\n    Variables\n    */\n      public mainTitle: string;\n      public navCollection: Array<NavModel>;\n    //\n\n\n    /*\n    Ajouter de la valeur aux variables\n    */\n      constructor(\n        // Rendre disponible le routeur dans le composant\n        private Router: Router\n        \n      ) {\n        this.mainTitle = `NewsFeed`;\n\n        this.navCollection = [\n          {\n            isActive: false,\n            name: 'Accueil',\n            path: '/'\n          },\n          {\n            isActive: false,\n            name: 'Actualités',\n            path: '/news'\n          },\n          {\n            isActive: false,\n            name: 'Utilisateurs',\n            path: '/users'\n          }\n        ]\n      };\n    //\n\n\n    /*\n    Méthodes\n    */\n      // Créer une fonction pour activer le lien (CSS)\n      private linkIsActive = ( path: string ) => {\n        for( let item of this.navCollection ){\n          item.path === path ? item.isActive = true : null;\n        }\n      };\n    //\n\n    ngOnInit() {\n      this.linkIsActive(this.Router.url)\n    }\n\n  }\n//","/*\nImport\n*/\n    // Angular\n    import { NgModule } from \"@angular/core\";\n    import { CommonModule } from \"@angular/common\";\n    import { RouterModule } from \"@angular/router\";\n\n    // Inner\n    import { HeaderComponent } from \"./header.component\";\n//\n\n\n/*\nDéfinition\n*/\n    @NgModule({\n        declarations: [ HeaderComponent ],\n        imports:[ CommonModule, RouterModule ],\n        exports: [ HeaderComponent ]\n    })\n//\n\n\n/*\nExport\n*/\n    export class HeaderModule{};\n//"],"sourceRoot":""}